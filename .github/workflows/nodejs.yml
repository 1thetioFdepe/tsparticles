# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main, dev, v1 ]
  pull_request:
    branches: [ main, dev, v1 ]

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: npx lerna bootstrap
      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx-cloud stop-all-agents
      - run: echo ${{ github.repository_owner }}
      - run: echo ${{ github.actor }}
      #- run: lerna test
      #- name: Codacy Coverage Reporter
      #  uses: codacy/codacy-coverage-reporter-action@0.2.0
      #  with:
      #    project-token: ${{ secrets.CodacyCoverageToken }}
      #    coverage-reports: coverage/lcov.info
      - if: github.ref == 'refs/heads/main'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TSPARTICLES }}'
          projectId: tsparticles
          channelId: live

      - if: github.ref == 'refs/heads/staging'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TSPARTICLES }}'
          projectId: tsparticles
          channelId: next

      - if: github.ref == 'refs/heads/dev'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TSPARTICLES }}'
          projectId: tsparticles
          channelId: dev

      - if: contains(github.ref, 'refs/pull') && github.actor == 'matteobruni'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_TSPARTICLES }}'
          projectId: tsparticles

  agents:
    runs-on: ubuntu-latest
    name: Nx Agent
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [ 1, 2, 3 ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: yarn install
      - run: npx lerna bootstrap
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
